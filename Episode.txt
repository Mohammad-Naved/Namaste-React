Laying the foundation



    "scripts": {
     "start":"parcel index.html",
    "test": "jest"
  },/*//this script will use to run dev build in package.json


//React.createElement => Object => When we render this element on dom it becomes an html

React is doing DOM operation fast.

// const heading = React.createElement("h1", { id: "heading" }, "Salam React"); //This is an object

//JSX=> HTML-like or XML-like syntax
//Is JSX a valid Javascript? No it is not pure javascript beacuse our jsengine can't understand js.
//JS engine understand ECMAScript

//JSX (transpiled (converted to code that browser can understand) before it reaches JS Engine ) =>PARCEL is doing transpiled
//(Actually Babel is doing the transpiled, Parcel just passing it to babel)
//Babel is converting JSX to React.createElement
//JSX => React.createElement => Object => When we render this element on dom it becomes an html
//If we have to give attribute to JSX we use camelCase
//If you want to write JSX in multiple line wrap in parenthesis ().Why we wrapping in parenthesis () because babel needs to understand 
//where is JSX starting and where is JSX ending.

const heading = <h1 id="heading">Salam React By JSX</h1>;


//React component
//Everyting is a component in react
//Two Types-
//1)Class-based component-OLD
//2)Functional Component-NEW

//React functional Component--> just a normal javascript function which returns some piece of JSX.
//Always create a component with Capital letter.
//React functional Component we can also called as javascript function which return React Element.  z
const HeadingComponent = () => (
  <div>
    <h1>This is another functional Component</h1>
  </div>
);

//Component composition=>Injecting one component into another.

//Props-> in simple term we can called as properties.It is same as  passing argument to the function.
Mostly we can use props to pass dynamic data to component.
config-driven-ui-->

export-->   
      1-Named export
      2-Default export
    In one file we can only have one default export.

Hooks-->Normal javascript function with some superpower(utilities).
    Have to import hooks as named import(import {useState} from "react").
        useState-->SuperPowerful state variable(Maintain the state of the component).
                   Whenever a state variable update react will re-render the component.
        useEffect-->


React using Reconcilliation Algorithm(React Fiber) came in React-16

Diff Algo-->Finds out diff between two virtual DOM.
Virtual DOM-->Is representation of actual DOM using JS object(for understand just console.log(React Component)).



